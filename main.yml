- name: Check delle precondizioni necessarie all'installazione
  hosts: "*-cti*:*-acd*:*-ipt*:*-stc*:*-msa*"
  gather_facts: true
  any_errors_fatal: true

  vars:
   precondition_version1: "7.0.4-2"
   precondition_version2: "7.0.5-1"
   bug: 6565
   logfile: /var/log/ansible_reitek.log
   dir_rpms: /home/RPMS/CT_7.0.5-2
   toinstall: /home/RPMS/toinstall

  tasks:
  # Precondizioni all'aggiornamento
  - include: ../roles/6269/tasks/include/OS_supported.yml
  - include: include/check_version.yml

   # Conferma dell'aggiornamento e resoconto in file e Database
  - block:
    - name: Conferma la volontà di voler aggiornare
      pause: prompt='Per favore conferma la volontà di aggiornare il Contact! Premi invio per proseguire. Premi Ctrl+c e poi "a" per interrompere'
      run_once: true
      when: ( AUTO is not defined or  ( AUTO is defined and AUTO != "true" )) and ansible_check_mode != true

    - name: resoconto in file {{ logfile }}
      shell: echo "Applicato il bug {{bug}} (UPGRADE_CONTACT 7.0.5-2) dall'utente $USER in data $(date +%d-%m-%Y_%H:%M:%S) sui server {{inventory_hostname}} " >> {{ logfile }}
      changed_when: false

    - name: resoconto in database ansible
      shell: mysql --user=ansible_update --password=$(cat /home/password_insert) -e "insert into ansible.bugs values ( '{{bug}}','$USER','$(date +%d-%m-%Y_%H:%M:%S)','{{inventory_hostname}}');"
      changed_when: false

    delegate_to: localhost
    delegate_facts: true
    run_once: true

  - name: stoppo il servizio crond
    service: name=crond state=stopped

  - set_fact:
     contact_active: false
     rasd_active: false
     opensips_active: false
     slapd_active: false
     msa_active: false
     sems_active: false
     httpd_active: false


# Verifica se Contact attivo
# Verica se rasd è attivo
# Verifica se opensips è attivo
# Verifica se OPENLDAP è attivo
# Verifica se MSA è attivo
# Verifica se SEMS è attivo
  - include: ../roles/6269/tasks/include/service_active_{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml
  - include: ../roles/6269/tasks/include/stopper_{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml

# Modifica la configurazione di opensips per distribuire il nuovo template e sistemare anche la parte di dialplan

################################################################################

  - name: Rimuovo tutti i .tar.gz nelle cartelle /opt/reitek/ct6/sbin e /opt/reitek/ct6/lib
    shell: find /opt/reitek/ct6/sbin /opt/reitek/ct6/lib -type f -name "*.tar.gz" -exec rm -f {} \;
  - name: Creo la cartella "{{ dir_rpms }}"
    file: state=directory path={{ dir_rpms }}
    check_mode: false

  - include_vars: include/var_{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml
    check_mode: false

  - name: Carico gli RPM  sulla macchina di riferimento (default CTI1)
    copy:
        dest: "{{ dir_rpms }}"
        src: "{{ item }}"
    check_mode: false
    with_fileglob:
        - "{{ src_rpms_contact }}"
        - "{{ src_rpms_msa }}"
        - "{{ src_rpms_sems }}"
        - "{{ src_rpms_ctmanagerws }}"
    when: inventory_hostname.split('-')[1].find(riferimento_cti1|default('cti1')) != -1

  # Così ogni macchina ha a disposizione tutti gli ultimi RPM
  - name: Copio gli RPM anche sulle altre macchine
    shell: scp -pr -o StrictHostKeyChecking=no root@{{ inventory_hostname.split('-')[0] }}-{{riferimento_cti1|default('cti1')}}:{{ dir_rpms }}/*.rpm {{ dir_rpms }}/
    check_mode: false
    changed_when: false
    when: inventory_hostname.split('-')[1].find(riferimento_cti1|default('cti1')) == -1

  # Si crea una cartella che deve contenere solo quelli che devono essere realmente installati
  - name: creo la cartella "{{ toinstall }}"
    file: state=directory path={{ toinstall }}
    check_mode: false

  - shell: rm -fr "{{ toinstall }}"/*
    check_mode: false
    changed_when: false


# Nella cartella to install vado a mettere solo gli RPM necessari
  - include: ../roles/6269/tasks/include/rpm_toinstall.yml
    check_mode: false
    with_items:
        - cth-opensips-
        - cth-B2BUAEP-
        - cth-B2BUAGW-
        - cth-B2BUAVXML-
        - cth-CTI-
        - cth-HTTP2SIP-
        - cth-hub-
        - cth-ImportD-
        - cth-ldapconfig-
        - cth-libsSIP-
        - cth-libs-
        - cth-oracle-db-
        - cth-overlay-x2x-
        - cth-sems-
        - cth-SipRP-
        - cth-SIPSBC-
        - cth-SM-
        - cth-system-
        - cth-X2XModules-
        - cth-X2XSipEP-
        - cth-CiscoBridge-
        - cth-dbfrontend-
        - cth-oracle11-system-
        - cth-VXMLUA-
        - cth-MSA-
        - cth-CTManagerWS-
  - name: TEST di installazione degli RPM
    shell: "rpm -Uvh --test --force {{ toinstall }}/*.rpm "
    changed_when: false
    check_mode: false

  - name: "INSTALLO GLI RPM !!!!"
    shell: "rpm -Uvh --force {{ toinstall }}/*.rpm "

  - name: Rimuovo vecchi binari installati manualmente
    shell: find /opt/reitek/ct6/sbin /opt/reitek/ct6/lib/ -type f -regex ".*\.7\.0\.[234].*" -delete

  - shell: updatedb

  - include: ../roles/6269/tasks/include/schema_ldap.yml

  - name: Rimozione cartella "{{ dir_rpms }}"
    file: state=absent path={{ dir_rpms }}
    check_mode: false
  - name: Rimozione della cartella "{{ toinstall }}"
    file: state=absent path={{ toinstall }}
    check_mode: false


- name: sistemo i link necessari per il funzionamento del prerouter
  hosts: "*-cti*:*-acd*:*-ipt*:*-stc*"
  gather_facts: true
  any_errors_fatal: true

  tasks:
  - shell: ln -fs PreRouter prerouter ; chown -h reicom.contact prerouter
    args:
        chdir: /opt/reitek/ct6/sbin/
    when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

  - shell: ln -fs PreRouter PreRouterMS ; chown -h reicom.contact PreRouterMS
    args:
        chdir: /opt/reitek/ct6/sbin/
    when: ansible_distribution  == 'RedHat' and ansible_distribution_major_version == "6"

  - pause: seconds=20
    when: ansible_check_mode != true


- name: Ripartenza del Contact
  hosts: "*-cti*:*-acd*:*-ipt*:*-stc*:*-msa*"
  gather_facts: true
  any_errors_fatal: true

  tasks:
  - include: ../roles/6269/tasks/include/starter_{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml
  - name: Avvio il servizio crond
    service: name=crond state=started

  - include: ../roles/6469/tasks/include/riavvia_servizi_pm2.yml
    with_items:
    - AgentDesktopSIO
    - CTLdapWS
    - CTView

- name: Aggiornamento degli ultimi binari on top 7.0.5
  hosts: "*-cti*:*-acd*:*-ipt*:*-stc*"
  gather_facts: true
  any_errors_fatal: true

  tasks:
  - service: name=crond state=stopped
  - include_role:
     name: '6164'
    vars:
     sorgente: '/mnt/qasr/ContaCT/Server/7.0.5/7.0.5-2/CENTOS7/binaries'
     logfile: '/var/log/ansible_reitek.log'
    when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

  - include_role:
     name: '6164'
    vars:
     sorgente: '/mnt/qasr/ContaCT/Server/7.0.5/7.0.5-2/RHEL6.3/binaries'
     logfile: '/var/log/ansible_reitek.log'
    when: ansible_distribution  == 'RedHat' and ansible_distribution_major_version == "6"
  - service: name=crond state=started
